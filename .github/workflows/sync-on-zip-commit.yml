name: Sync from ZIP upload (incoming/)

on:
  push:
    paths:
      - 'incoming/*.zip'

# permite git push com o GITHUB_TOKEN
permissions:
  contents: write

jobs:
  unzip-and-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install unzip & rsync
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y unzip rsync

      - name: Find latest ZIP in incoming/
        id: findzip
        run: |
          set -euxo pipefail
          LATEST="$(ls -t incoming/*.zip 2>/dev/null | head -n1 || true)"
          if [ -z "$LATEST" ]; then
            echo "Nenhum ZIP em incoming/"; exit 1
          fi
          echo "zip_path=$LATEST" >> "$GITHUB_OUTPUT"
          echo "ZIP encontrado: $LATEST"

      - name: Unzip payload
        run: |
          set -euxo pipefail
          rm -rf /tmp/_unz && mkdir -p /tmp/_unz
          unzip -o "${{ steps.findzip.outputs.zip_path }}" -d /tmp/_unz
          echo "Conteúdo /tmp/_unz:"
          ls -la /tmp/_unz
          ROOT="/tmp/_unz"
          DIRS=$(find /tmp/_unz -mindepth 1 -maxdepth 1 -type d | wc -l)
          FILES=$(find /tmp/_unz -mindepth 1 -maxdepth 1 -type f | wc -l)
          if [ "$DIRS" -eq 1 ] && [ "$FILES" -eq 0 ]; then
            ROOT="$(find /tmp/_unz -mindepth 1 -maxdepth 1 -type d | head -n1)"
          fi
          echo "ROOT=$ROOT" | tee /tmp/root_path

      - name: Sync files to repo (exclude build artifacts)
        run: |
          set -euxo pipefail
          ROOT="$(cat /tmp/root_path)"
          rsync -av --delete \
            --exclude ".git" \
            --exclude "node_modules" \
            --exclude "dist" \
            "$ROOT"/ ./

      - name: Remove processed ZIP
        run: |
          set -euxo pipefail
          rm -f "${{ steps.findzip.outputs.zip_path }}"

      - name: Commit & push if changed
        run: |
          set -euxo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin "$GITHUB_REF_NAME" || true
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: sync from incoming ZIP $(date +'%Y-%m-%d %H:%M %Z')"
            git push
          else
            echo "Sem mudanças para commit."
          fi
