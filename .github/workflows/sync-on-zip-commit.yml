name: Sync from ZIP upload (incoming/)

on:
  push:
    paths:
      - 'incoming/*.zip'

jobs:
  unzip-and-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install unzip & rsync
        run: sudo apt-get update && sudo apt-get install -y unzip rsync

      - name: Pick latest ZIP
        id: pick
        shell: bash
        run: |
          set -e
          echo "Listando zips em incoming/"
          ls -l incoming || true
          LATEST="$(ls -t incoming/*.zip 2>/dev/null | head -n1 || true)"
          if [[ -z "$LATEST" ]]; then
            echo "Nenhum ZIP encontrado em incoming/"; exit 1
          fi
          echo "ZIP escolhido: $LATEST"
          echo "zip_path=$LATEST" >> "$GITHUB_OUTPUT"

      - name: Unzip
        shell: bash
        run: |
          set -e
          rm -rf /tmp/_unz && mkdir -p /tmp/_unz
          unzip -q "${{ steps.pick.outputs.zip_path }}" -d /tmp/_unz
          echo "Conteúdo unzip:"
          ls -la /tmp/_unz
          # Se o ZIP tiver uma única pasta-raiz, usa ela; senão usa a raiz do unzip
          ROOT="/tmp/_unz"
          ONLY_DIRS=$(find /tmp/_unz -mindepth 1 -maxdepth 1 -type d | wc -l)
          ONLY_FILES=$(find /tmp/_unz -mindepth 1 -maxdepth 1 -type f | wc -l)
          if [[ "$ONLY_DIRS" -eq 1 && "$ONLY_FILES" -eq 0 ]]; then
            ROOT="$(find /tmp/_unz -mindepth 1 -maxdepth 1 -type d | head -n1)"
          fi
          echo "ROOT=$ROOT" | tee /tmp/root_path
          cat /tmp/root_path

      - name: Sync to repo (exclude build artifacts)
        shell: bash
        run: |
          set -e
          ROOT="$(cat /tmp/root_path)"
          rsync -av --delete \
            --exclude ".git" \
            --exclude "node_modules" \
            --exclude "dist" \
            "$ROOT"/ ./

      - name: Remove processed ZIP
        run: rm -f "${{ steps.pick.outputs.zip_path }}"

      - name: Commit & push if changed
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "chore: sync from incoming ZIP $(date +'%Y-%m-%d %H:%M %Z')"
            git push
            echo "changes_pushed=true" >> $GITHUB_OUTPUT
          else
            echo "Sem mudanças para commit."
            echo "changes_pushed=false" >> $GITHUB_OUTPUT
          fi
